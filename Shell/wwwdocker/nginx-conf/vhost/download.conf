server {
    listen 80;
    root   /opt/openresty/nginx/html/download;
    server_name  download.ooxx.com;
    charset utf-8;
    autoindex on; #开启目录浏览
    autoindex_exact_size off; #关闭  byte显示 大小，以 M G 显示
    autoindex_localtime on; #开启服务器时间显示


#限制并发请求生效并发为3 ,执行访问限制频率
limit_req zone=down_one burst=3;


#限速，每IP只允许1个连接，当下载包大小达到1M后为速度限制为100k,每个IP只能发起一个连接
    limit_conn perip 1;
    limit_rate_after       1M;
    limit_rate             100k;


# 设置Hearders头
more_set_headers 'Server: DWS/1.1';

#自定义
more_set_headers 'Limit: 1r/s,burst=3';


if ($host !~* "download.ooxx.com") {
        return 403;
               }

#禁止爬虫收录	
if ($http_user_agent ~* "YisouSpider|360Spider|HaosouSpider|qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot") 
{ 
return 403; 
} 

#判断文件或者目录是否存在
#if (!-e $request_filename) {
#return 301 http://download.ooxx.com;
#rewrite ^/(.*) $scheme://$host permanent; 
#return 404;  
#}


# (不区分大小写)访问脚本文件被定义为纯文本格式 
location ~* .*\.(sh|bash|lua|md|conf)$ {
	charset utf-8;
	default_type 'text/plain'; #纯文本格式 
 }

#  location ~* .*\.(doc|pdf|docx|csv|xls|xlsx|ppt|pptx)$ {
# 	charset utf-8;
#     default_type 'text/html';
#  }
 
location = /(favicon.ico|robots.txt)$ {
log_not_found off;
access_log off;
}


# 定义 403 ,@403 使用lua 设置页面响应状态码为403，然后输出警告提示语
 location @403 {
 charset utf-8;
 default_type 'text/html';
 content_by_lua '
 ngx.status = 403
 ngx.say("Error： 请注意您的访问权限 ")
 ';
 }
 
# 定义 404 ,@404 使用lua 设置页面响应状态码为403，然后输出警告提示语
error_page 404 = @404;
location @404 {
charset utf-8;
default_type 'text/html';
content_by_lua '
ngx.status = 404
ngx.say("Error 404： 您访问的文件路径不存在 ")
';
}

}


