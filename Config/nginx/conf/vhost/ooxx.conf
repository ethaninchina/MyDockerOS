upstream upstream_ooxx {
   server 127.0.0.1:8080 weight=1 max_fails=3 fail_timeout=10s;
   keepalive 8; #参数设置每个worker进程与后端服务器保持连接的最大数量,这些保持的连接会被放入缓存,如果连接数大于这个值时,最久未使用的连接会被关闭.
    }

upstream upstream_ooxx.com {
   server 127.0.0.1:8080 weight=1 max_fails=3 fail_timeout=10s;
   keepalive 8; #参数设置每个worker进程与后端服务器保持连接的最大数量,这些保持的连接会被放入缓存, 如果连接数大于这个值时,最久未使用的连接会被关闭.
    }

    server {
            listen   80;
            server_name  80uncle.com    www.80uncle.com;
	          underscores_in_headers on;

            location / {
                proxy_pass http://upstream_ooxx;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
                proxy_ignore_client_abort on;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                            }

            location /admin {
               	default_type text/html;
		            #判断header 
                if ($http_who_are_you != "ooxx_admin") {
                    charset utf-8;
                    content_by_lua 'ngx.say("<p>访问的页面不存在</p>")';
                        }              
                proxy_pass http://upstream_ooxx.com;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
                proxy_ignore_client_abort on;
                proxy_http_version 1.1;
                proxy_set_header Connection "";

    	        }

                  # status 页面
                  location = /upstream_status {
                        default_type text/plain;
                        access_log off;
                        #判断header
                        if ($http_who_are_you != "ooxx_admin") {
                            charset utf-8;
                            content_by_lua 'ngx.say("访问的页面不存在")';
                              }
                        content_by_lua_block {
                        local hc = require "resty.upstream.healthcheck"
                        ngx.say("Nginx Worker PID: ", ngx.worker.pid())
                        ngx.print(hc.status_page())
                     }
            }    

	}
